var LZString = function () { function a(a, b) { if (!e[a]) { e[a] = {}; for (var c = 0; c < a.length; c++) e[a][a.charAt(c)] = c } return e[a][b] } var b = String.fromCharCode, c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$", e = {}, f = { compressToBase64: function (a) { if (null == a) return ""; var b = f._compress(a, 6, function (a) { return c.charAt(a) }); switch (b.length % 4) { default: case 0: return b; case 1: return b + "==="; case 2: return b + "=="; case 3: return b + "=" } }, decompressFromBase64: function (b) { return null == b ? "" : "" == b ? null : f._decompress(b.length, 32, function (d) { return a(c, b.charAt(d)) }) }, compressToUTF16: function (a) { return null == a ? "" : f._compress(a, 15, function (a) { return b(a + 32) }) + " " }, decompressFromUTF16: function (a) { return null == a ? "" : "" == a ? null : f._decompress(a.length, 16384, function (b) { return a.charCodeAt(b) - 32 }) }, compressToUint8Array: function (a) { for (var b = f.compress(a), c = new Uint8Array(2 * b.length), d = 0, e = b.length; e > d; d++) { var g = b.charCodeAt(d); c[2 * d] = g >>> 8, c[2 * d + 1] = g % 256 } return c }, decompressFromUint8Array: function (a) { if (null === a || void 0 === a) return f.decompress(a); for (var c = new Array(a.length / 2), d = 0, e = c.length; e > d; d++) c[d] = 256 * a[2 * d] + a[2 * d + 1]; var g = []; return c.forEach(function (a) { g.push(b(a)) }), f.decompress(g.join("")) }, compressToEncodedURIComponent: function (a) { return null == a ? "" : f._compress(a, 6, function (a) { return d.charAt(a) }) }, decompressFromEncodedURIComponent: function (b) { return null == b ? "" : "" == b ? null : (b = b.replace(/ /g, "+"), f._decompress(b.length, 32, function (c) { return a(d, b.charAt(c)) })) }, compress: function (a) { return f._compress(a, 16, function (a) { return b(a) }) }, _compress: function (a, b, c) { if (null == a) return ""; var d, e, f, g = {}, h = {}, i = "", j = "", k = "", l = 2, m = 3, n = 2, o = [], p = 0, q = 0; for (f = 0; f < a.length; f += 1) if (i = a.charAt(f), Object.prototype.hasOwnProperty.call(g, i) || (g[i] = m++, h[i] = !0), j = k + i, Object.prototype.hasOwnProperty.call(g, j)) k = j; else { if (Object.prototype.hasOwnProperty.call(h, k)) { if (k.charCodeAt(0) < 256) { for (d = 0; n > d; d++) p <<= 1, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++; for (e = k.charCodeAt(0), d = 0; 8 > d; d++) p = p << 1 | 1 & e, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++, e >>= 1 } else { for (e = 1, d = 0; n > d; d++) p = p << 1 | e, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++, e = 0; for (e = k.charCodeAt(0), d = 0; 16 > d; d++) p = p << 1 | 1 & e, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++, e >>= 1 } l--, 0 == l && (l = Math.pow(2, n), n++), delete h[k] } else for (e = g[k], d = 0; n > d; d++) p = p << 1 | 1 & e, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++, e >>= 1; l--, 0 == l && (l = Math.pow(2, n), n++), g[j] = m++, k = String(i) } if ("" !== k) { if (Object.prototype.hasOwnProperty.call(h, k)) { if (k.charCodeAt(0) < 256) { for (d = 0; n > d; d++) p <<= 1, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++; for (e = k.charCodeAt(0), d = 0; 8 > d; d++) p = p << 1 | 1 & e, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++, e >>= 1 } else { for (e = 1, d = 0; n > d; d++) p = p << 1 | e, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++, e = 0; for (e = k.charCodeAt(0), d = 0; 16 > d; d++) p = p << 1 | 1 & e, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++, e >>= 1 } l--, 0 == l && (l = Math.pow(2, n), n++), delete h[k] } else for (e = g[k], d = 0; n > d; d++) p = p << 1 | 1 & e, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++, e >>= 1; 0 == --l && (l = Math.pow(2, n), n++) } for (e = 2, d = 0; n > d; d++) p = p << 1 | 1 & e, q == b - 1 ? (q = 0, o.push(c(p)), p = 0) : q++, e >>= 1; for (; ;) { if (p <<= 1, q == b - 1) { o.push(c(p)); break } q++ } return o.join("") }, decompress: function (a) { return null == a ? "" : "" == a ? null : f._decompress(a.length, 32768, function (b) { return a.charCodeAt(b) }) }, _decompress: function (a, c, d) { var e, f, g, h, i, j, k, l = [], m = 4, n = 4, o = 3, p = "", q = [], r = { val: d(0), position: c, index: 1 }; for (e = 0; 3 > e; e += 1) l[e] = e; for (g = 0, i = Math.pow(2, 2), j = 1; j != i;) h = r.val & r.position, r.position >>= 1, 0 == r.position && (r.position = c, r.val = d(r.index++)), g |= (h > 0 ? 1 : 0) * j, j <<= 1; switch (g) { case 0: for (g = 0, i = Math.pow(2, 8), j = 1; j != i;) h = r.val & r.position, r.position >>= 1, 0 == r.position && (r.position = c, r.val = d(r.index++)), g |= (h > 0 ? 1 : 0) * j, j <<= 1; k = b(g); break; case 1: for (g = 0, i = Math.pow(2, 16), j = 1; j != i;) h = r.val & r.position, r.position >>= 1, 0 == r.position && (r.position = c, r.val = d(r.index++)), g |= (h > 0 ? 1 : 0) * j, j <<= 1; k = b(g); break; case 2: return "" } for (l[3] = k, f = k, q.push(k) ; ;) { if (r.index > a) return ""; for (g = 0, i = Math.pow(2, o), j = 1; j != i;) h = r.val & r.position, r.position >>= 1, 0 == r.position && (r.position = c, r.val = d(r.index++)), g |= (h > 0 ? 1 : 0) * j, j <<= 1; switch (k = g) { case 0: for (g = 0, i = Math.pow(2, 8), j = 1; j != i;) h = r.val & r.position, r.position >>= 1, 0 == r.position && (r.position = c, r.val = d(r.index++)), g |= (h > 0 ? 1 : 0) * j, j <<= 1; l[n++] = b(g), k = n - 1, m--; break; case 1: for (g = 0, i = Math.pow(2, 16), j = 1; j != i;) h = r.val & r.position, r.position >>= 1, 0 == r.position && (r.position = c, r.val = d(r.index++)), g |= (h > 0 ? 1 : 0) * j, j <<= 1; l[n++] = b(g), k = n - 1, m--; break; case 2: return q.join("") } if (0 == m && (m = Math.pow(2, o), o++), l[k]) p = l[k]; else { if (k !== n) return null; p = f + f.charAt(0) } q.push(p), l[n++] = f + p.charAt(0), m--, f = p, 0 == m && (m = Math.pow(2, o), o++) } } }; return f }(); "function" == typeof define && define.amd ? define(function () { return LZString }) : "undefined" != typeof module && null != module && (module.exports = LZString),
        eval(LZString.decompressFromBase64(""));

var saveAs = saveAs || function (e) { "use strict"; if (typeof e === "undefined" || typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) { return } var t = e.document, n = function () { return e.URL || e.webkitURL || e }, r = t.createElementNS("http://www.w3.org/1999/xhtml", "a"), o = "download" in r, a = function (e) { var t = new MouseEvent("click"); e.dispatchEvent(t) }, i = /constructor/i.test(e.HTMLElement) || e.safari, f = /CriOS\/[\d]+/.test(navigator.userAgent), u = function (t) { (e.setImmediate || e.setTimeout)(function () { throw t }, 0) }, s = "application/octet-stream", d = 1e3 * 40, c = function (e) { var t = function () { if (typeof e === "string") { n().revokeObjectURL(e) } else { e.remove() } }; setTimeout(t, d) }, l = function (e, t, n) { t = [].concat(t); var r = t.length; while (r--) { var o = e["on" + t[r]]; if (typeof o === "function") { try { o.call(e, n || e) } catch (a) { u(a) } } } }, p = function (e) { if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)) { return new Blob([String.fromCharCode(65279), e], { type: e.type }) } return e }, v = function (t, u, d) { if (!d) { t = p(t) } var v = this, w = t.type, m = w === s, y, h = function () { l(v, "writestart progress write writeend".split(" ")) }, S = function () { if ((f || m && i) && e.FileReader) { var r = new FileReader; r.onloadend = function () { var t = f ? r.result : r.result.replace(/^data:[^;]*;/, "data:attachment/file;"); var n = e.open(t, "_blank"); if (!n) e.location.href = t; t = undefined; v.readyState = v.DONE; h() }; r.readAsDataURL(t); v.readyState = v.INIT; return } if (!y) { y = n().createObjectURL(t) } if (m) { e.location.href = y } else { var o = e.open(y, "_blank"); if (!o) { e.location.href = y } } v.readyState = v.DONE; h(); c(y) }; v.readyState = v.INIT; if (o) { y = n().createObjectURL(t); setTimeout(function () { r.href = y; r.download = u; a(r); h(); c(y); v.readyState = v.DONE }); return } S() }, w = v.prototype, m = function (e, t, n) { return new v(e, t || e.name || "download", n) }; if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) { return function (e, t, n) { t = t || e.name || "download"; if (!n) { e = p(e) } return navigator.msSaveOrOpenBlob(e, t) } } w.abort = function () { }; w.readyState = w.INIT = 0; w.WRITING = 1; w.DONE = 2; w.error = w.onwritestart = w.onprogress = w.onwrite = w.onabort = w.onerror = w.onwriteend = null; return m }(typeof self !== "undefined" && self || typeof window !== "undefined" && window || this.content); if (typeof module !== "undefined" && module.exports) { module.exports.saveAs = saveAs } else if (typeof define !== "undefined" && define !== null && define.amd !== null) { define("FileSaver.js", function () { return saveAs }) }

var isOpera = !!window.opr && !!opr.addons || !!window.opera || navigator.userAgent.indexOf(" OPR/") >= 0, isFirefox = "undefined" != typeof InstallTrigger, isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor") > 0, isIE = !!document.documentMode, isEdge = !isIE && !!window.StyleMedia, isChrome = !!window.chrome && !!window.chrome.webstore, isBlink = (isChrome || isOpera) && !!window.CSS, mobileAndTabletcheck = function () { var e = !1; return function (t) { (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(t) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0, 4))) && (e = !0) }(navigator.userAgent || navigator.vendor || window.opera), e }; window.isMobileDevice = mobileAndTabletcheck(), window.iOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform), window.ui = { dateInteger: function () { return Date.now() }, guidCounter: 0, guidIndex: function () { return this.guidCounter++, ui.dateInteger() + this.guidCounter }, guid: function () { return this.guidCounter++, (ui.dateInteger() + this.guidCounter).toString(36) } }, window.funcStr = function (e) { var t = e.toString().replace("function () {", ""); return t = t.substr(0, t.length - 1), t.replace(/locationBaseUrl/g, "http://" + location.host) }, $ = jQuery, $.fn.showProcessing = function () { this[0].showProcessing || (this[0].showProcessing = $('<div class="loading-container"><div class="loading"></div><div class="loading-text">please wait..</div></div>'), this.append(this[0].showProcessing)) }, $.fn.hideProcessing = function () { this[0].showProcessing && this[0].showProcessing.remove(), this[0].showProcessing = !1 }, window.ui.showProcessing = function () { $(document.body).showProcessing() }, window.eachItem = function (e, t, i, o) { o = o || 0; var n = { arr: e, index: o, invoke: t, done: i, callNext: function () { this.index < this.arr.length ? (this.index++, this.invoke(this.arr[this.index - 1], this)) : this.done && this.done() } }; n.call = n.callNext, n.callNext() }, window.ui.hideProcessing = function () { $(document.body).hideProcessing() }, window.loadUrl = function (e, t) { t = t || "string", console.log("loading url", e); var i = new XMLHttpRequest; return i.responseType = t, i.open("GET", e, !0), i.onload = function (e) { }, i.send(), i.onerror = function (e) { console.log(e) }, i }, window.dateFormat = function () { var e = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g, t = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g, i = /[^-+\dA-Z]/g, o = function (e, t) { for (e = String(e), t = t || 2; e.length < t;) e = "0" + e; return e }; return function (n, a, r) { var s = dateFormat; if (1 != arguments.length || "[object String]" != Object.prototype.toString.call(n) || /\d/.test(n) || (a = n, n = void 0), n = n ? new Date(n) : new Date, isNaN(n)) throw SyntaxError("invalid date"); a = String(s.masks[a] || a || s.masks["default"]), "UTC:" == a.slice(0, 4) && (a = a.slice(4), r = !0); var d = r ? "getUTC" : "get", m = n[d + "Date"](), c = n[d + "Day"](), l = n[d + "Month"](), u = n[d + "FullYear"](), g = n[d + "Hours"](), h = n[d + "Minutes"](), p = n[d + "Seconds"](), w = n[d + "Milliseconds"](), y = r ? 0 : n.getTimezoneOffset(), f = { d: m, dd: o(m), ddd: s.i18n.dayNames[c], dddd: s.i18n.dayNames[c + 7], m: l + 1, mm: o(l + 1), mmm: s.i18n.monthNames[l], mmmm: s.i18n.monthNames[l + 12], yy: String(u).slice(2), yyyy: u, h: g % 12 || 12, hh: o(g % 12 || 12), H: g, HH: o(g), M: h, MM: o(h), s: p, ss: o(p), l: o(w, 3), L: o(w > 99 ? Math.round(w / 10) : w), t: 12 > g ? "a" : "p", tt: 12 > g ? "am" : "pm", T: 12 > g ? "A" : "P", TT: 12 > g ? "AM" : "PM", Z: r ? "UTC" : (String(n).match(t) || [""]).pop().replace(i, ""), o: (y > 0 ? "-" : "+") + o(100 * Math.floor(Math.abs(y) / 60) + Math.abs(y) % 60, 4), S: ["th", "st", "nd", "rd"][m % 10 > 3 ? 0 : (m % 100 - m % 10 != 10) * m % 10] }; return a.replace(e, function (e) { return e in f ? f[e] : e.slice(1, e.length - 1) }) } }(), dateFormat.masks = { "default": "ddd mmm dd yyyy HH:MM:ss", shortDate: "m/d/yy", mediumDate: "mmm d, yyyy", longDate: "mmmm d, yyyy", fullDate: "dddd, mmmm d, yyyy", shortTime: "h:MM TT", mediumTime: "h:MM:ss TT", longTime: "h:MM:ss TT Z", isoDate: "yyyy-mm-dd", isoTime: "HH:MM:ss", isoDateTime: "yyyy-mm-dd'T'HH:MM:ss", isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'" }, dateFormat.i18n = { dayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] }, Date.prototype.format = function (e, t) { return window.dateFormat(this, e, t) }, Date.fromTime = function (e) { var t = new Date; return t.setTime(e), e }, Date.fromatFromTimeDate = new Date, Date.fromatFromTime = function (e, t) { return Date.fromatFromTimeDate.setTime(parseInt(e)), Date.fromatFromTimeDate.format(t) };


window.anipartiMainURL = window.anipartiMainURL || "";



if (window.anipartiMainURL != "") window.anipartiMainURL += '/';

window.clearContent = function () {
  if (window.viewer) {
    window.viewer.stop();
    window.viewerArea.onload = function () { };
    window.viewerArea.src = "";
  }
};

window.prepareLoadContent = function () {
  if (window.prepareLoadContentDone) return;

  window.viewerArea = document.getElementById("viewerArea");

  window.anipartiBaseURL = window.anipartiBaseURL || window.location.href.substring(0, window.location.href.lastIndexOf('/'));

  window.AudioContext = window.AudioContext || window.webkitAudioContext;


  // window.eval(window.engineSource);
  //window.eval(window.viewerSource);

  //window._soundManager = window._soundManager || new window.soundManager();

  window.prepareLoadContentDone = true;
};
window.viewerPlayMode = "soundMotion";

window.loadContent = function (e, i) { var e = e; if (window.isIsolatedContent = !1, e || (e = $(document.body).attr("aniparti-content")) && (window.isIsolatedContent = !0, console.log("isolated content hey"), window.contentSlidenIndex = 0, location.hash && (window.viewerPlayMode = location.hash.replace("#", ""))), e) { window.loadView || window.prepareLoadContent(), window.contentStringOrig = e, window.contentString = LZString.decompressFromEncodedURIComponent(e), window.createDummySlide = function (e, i) { e = e || 400, i = i || 600; var n = JSON.parse('{"uuid":"","actionTimelines":[{"blocks":[]}],"cameras":[{"uuid":"j1z247q8","depth":0,"viewDistance":200,"depthField":50,"lookX":0,"lookY":0,"zoomValue":50,"cameraWidth":' + e + ',"cameraHeight":' + i + ',"cameraDepth":true,"left":0,"top":0,"width":400,"height":600,"scaleX":1,"scaleY":1,"angle":0,"originX":"center","originY":"center","alphaValue":100,"blurValue":0,"cssAngle":0,"tintValueRGBA":[255,255,255,1],"nodeLock":false,"nodeVisible":true,"title":"camera.12","name":"camera.12","nodeExpended":true,"timelines":[{"blocks":[]}]}],"layers":[{"objects":[],"depth":50,"depthEnabled":true,"depthEffect":100,"nodeLock":false,"nodeVisible":true,"title":"layer.12","name":"layer.12","nodeExpended":true}],"timelineBlocks":[],"activeCameraId":"j1z247q8","preloading":[],"donotPublishSlide":false,"resetOnActivate":false,"resetAfterSeconds":0,"timelineSet":"Set1","timelineSets":["Set1"]}'); return n.uuid = ui.guid(), n.addButton = function (e, i, n, o, t, a, d, r) { var w = { disableDisplayScale: !0, hideOnCreated: !1, imageUrl: "", scaleAble: !0, fillColor: 13859611, objectType: "image", uuid: "", left: 0, top: 0, width: 800, height: 245, scaleX: .48, scaleY: .48, angle: 0, originX: "center", originY: "center", alphaValue: 100, blurValue: 0, cssAngle: 0, tintValueRGBA: [255, 255, 255, 1], filters: { opacity: !0, blur: !1, colorTint: !1 }, shadowSupport: { enabled: !1, x: 10, y: 10, blurValue: 0, alphaValue: 50, layer: "", scale: 100, depth: 70, depthEnabled: !1 }, events: {}, timelines: [{ blocks: [] }] }; return w.uuid = ui.guid(), w.imageUrl = d, w.left = e, w.top = i, w.width = n, w.height = o, w.scaleX = t, w.scaleY = a, r && (w.alphaValue = 100, w.events.onTouch = [r]), this.preloading.push({ imageUrl: d }), w = JSON.parse(JSON.stringify(w)), this.layers[0].objects.push(w), w }, n }, window.loadView = function (e, i, n) { console.log("anipartiBaseURL", window.anipartiBaseURL), window.viewerArea.onload = function () { window.viewer && (window.viewer.stop(), window.viewer.remove(), delete window.viewer); var o = this.contentDocument || this.contentWindow.document; o.window.$ = jQuery, o.window.LZString = LZString, o.window.anipartiMainURL = window.anipartiMainURL, o.window.anipartiBaseURL = window.anipartiBaseURL, window.loadStyleSheet(o, window.mainCSS), o.window.eval(window.engineSource), o.window.eval(window.viewerSource), window.viewer = o.window.$('<div style="position:relative;width:100%;height:100%"></div>'), window.$(o.body).append(window.viewer), o.window.$(o.body).css("margin", "0").css("padding", "0"), window.viewer.anipartiViewer({ baseUrl: window.anipartiBaseURL, soundManager1: window._soundManager }).onLoad = function (t) { t.showAnipartiTouch = function (e) { var i = o.window.$('<div class="showAnipartiTouch" style="position:absolute;left:0;top:0;right:0;bottom:0;background-color:#af0000;"><img src="logo-aniparti-white.png" style="position:absolute;left:50%;top:50%;margin-left:-100px;margin-top:-122px" width="200" /><h3 style="text-align:center;left:0;right:0; top:50%;position:absolute;margin-top:140px;line-height:40px;color:white"><< Click to play >> <br/><< 点击 >>  </h3></div>'); t.append(i), i.click(function () { t.soundManager.handleIOS() && t.events("IOSHandle"), e(), i.remove() }), i[0].addEventListener("touchend", function (n) { t.soundManager.handleIOS(), e(), i.remove() }) }, t.events("IOSHandle", function () { window.IOSHandle1 = !0, console.log("window.IOSHandle", window.IOSHandle) }), console.log("window.IOSHandle", window.IOSHandle), window.IOSHandle && (t.showAnipartiTouch = function (e) { e() }); var a = $(o.window).width(), d = $(o.window).height(); if (t.actions.OpenHyperlink = function (e, i) { console.log("OpenHyperlink"), console.log("action.Link", i.Link), i.linkSameWindow ? (window.location.href = i.Link, setTimeout(function () { window.location.reload() }, 2e3)) : window.open(i.Link, "_blank", "location=no") }, window.anipartiViewerOverride && window.anipartiViewerOverride.length) try { window.anipartiViewerOverride.forEach(function (e) { e(t) }) } catch (e) { } var r = !1; if (t.actions.NextPaginationGroup = function (e, i) { i.group ? window.moveToPaginationGroup(document.getElementById(i.group)) : window.nextGroupAddress && window.moveToPaginationGroup(document.getElementById(window.nextGroupAddress)) }, n) if (window.adSlides.length > 0) r = JSON.parse(window.adSlides[window.adSlidesIndex]), 2 == window.adsOrderType ? window.adSlidesIndex = parseInt(Math.random() * window.adSlides.length) : window.adSlidesIndex++, window.adSlidesIndex > window.adSlides.length - 1 && (window.adSlidesIndex = 0); else { var w = a / 1230; (r = window.createDummySlide(a, d)).addButton(0, 0, 1230, 1673, w, w, "nextPageImage", { actionName: "NextPaginationGroup", group: n }) } console.log("window", a + "x" + d), t.portraitDisplay(JSON.parse(window.contentString), a, d, !0, e, i, r), window.mainContainer.hideProcessing() }, console.log(window.viewer) }, console.log("window.viewerArea.src"), window.viewerArea.src = "isolated-viewer.html?" + Date.now() }; var n = JSON.parse(window.contentString); i || (window.viewerPlayMode = n.defaultPlayMode || "soundMotion"), window.adsOrderType = n.adsOrderType; var o = [], t = {}; if (n.slides.forEach(function (e) { e.setForAds ? t[e.uuid] = JSON.stringify(e) : (e.playMode = e.playMode || "soundMotion", e.playMode == window.viewerPlayMode && o.push(e)) }), o.length < 1) { console.log("no slided to show"), window.viewerArea.onload = function () { }, window.viewerArea.src = "isolated-viewer.html?" + Date.now(), $(".navigationBar").hide(); var a = "No Full Motion version is ready."; return "imageOnly" == window.viewerPlayMode ? a = "No 2D image only version is ready" : "imageSound" == window.viewerPlayMode && (a = "No 2D & Sound version is ready."), void $(".viewerErrorMessage").html(a).show() } if ($(".navigationBar").show(), $(".viewerErrorMessage").hide(), window.topNavBar && (window.topNavBar.find("a.selected").removeClass("selected"), window.topNavBar.find("a." + window.viewerPlayMode + "Button").addClass("selected")), window.adSlides = [], window.adSlidesIndex = 0, console.log("obj", n), n.adsSorted && n.adsSorted.forEach(function (e) { window.adSlides.push(t[e]) }), n.slides = o, window.contentString = JSON.stringify(n), $(".slideGroupsItems").hide(), n.slidesInPaginationSelected) { var d = n.slidesInPagination, r = n.slides.length / d, w = $(".slideGroupsItems"); w.css("height", $(window).height() - 5 + "px"), w.html(""), window.moveToPaginationGroup = function (e) { var i = $(e); $(e.parentNode).find("li.active").removeClass("active"), i.addClass("active"); var n = parseInt(i.attr("groupstart")), o = parseInt(i.attr("pagesize")); window.nextGroupAddress = !1, e.nextSibling ? (window.nextGroupAddress = e.nextSibling.getAttribute("id"), setTimeout(function () { window.loadView(n, o, window.nextGroupAddress) }, 100)) : window.loadView(n, o) }; for (var l = 0; l < r; l++) { var s = $('<li><a href="javascript:;"></a></li>'), c = l * d + d; s.attr("id", "groupId" + l), c > n.slides.length && (c -= c - n.slides.length), s.find("a").html("Slides " + (l * d + 1) + " to " + c), w.append(s), s.attr("groupstart", l * d), s.attr("pagesize", d), s.click(function () { window.moveToPaginationGroup(this) }), 0 == l && (s.addClass("active"), s[0]) } $(".slideGroupsItems").show(), window.moveToPaginationGroup(w[0].firstChild) } else $(".sidebarButton").hide(), window.loadView() } };

window.loadStyleSheetFile = function (doc, css) {

  var head = doc.head || doc.getElementsByTagName('head')[0],
  style = doc.createElement('link');
  style.type = 'text/css';
  style.rel = "stylesheet";
  style.href = css;
  head.appendChild(style);
  return (style);

};

window.bindElements = function (container, object, executer) {
  container.find("*[data-bind]").each(function (index, value) {
    var a = this.getAttribute("data-bind");

    object[a] = this;
    this.parent = object;
    object[a].$ = $(this);
    // console.log("a=" + a);
    //console.log(object[a].$);
    object[a].$.addClass(a);
    this.removeAttribute("data-bind");
  });

  container.find("*[data-execute]").each(function (index, value) {
    var a = this.getAttribute("data-execute");
    if (executer) executer.apply(this, [a]); else eval(a);
    this.removeAttribute("data-execute");
  });



};

window.parseCodeBlocks = function (html) {

  var reg = new RegExp("<script[\\s\\S]*?>", "g");
  var tt;
  var htmlLength = html.length;
  while ((tt = reg.exec(html)) !== null) {
    if (tt[0].indexOf("text/html") < 0) {
      html = html.replace(tt[0], tt[0].replace("script", 'div class="codeBlock template" ') + '<!--');
      var sIndex = reg.lastIndex;
      html = html.replace(/<\/script>/g, function (match, offset) {
        if (sIndex < 0) return (match);

        if (offset > sIndex) { sIndex = -1000; return ("--></div>"); }
        return (match);
      });
    }
  }

  return html;

};
window.loadStyleSheet = function (doc, css) {


  var head = doc.head || doc.getElementsByTagName('head')[0],
  style = doc.createElement('style');
  style.type = 'text/css';

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(doc.createTextNode(css));
  }

  head.appendChild(style);
};





window.loadPage = function (html) {

  document.body.innerHTML = html;
  window.mainCSS = $("#mainCSS").html();
  window.mainContainer = $("#mainContainer");
  var windowWidth = $(window).width();
  if (!window.isMobileDevice) {
    window.mainContainer.css("width", "600px").css("left", "50%").css("margin-left", "-300px");
  }



  if (window._phonegap) {
    $("#mainContainer").hide();
    $(document).ready(function () {
      _phonegap.deviceReady();
    });

    _phonegap.deviceReady = function () {

      if (_phonegap.isReady) return;
      _phonegap.isReady = true;

    };
    window.ui.showProcessing();

    window.loadUrl(window.appUrl + "/aviewer.html?" + Date.now()).onload = function () {
      window.ui.hideProcessing();

      var r = window.parseCodeBlocks(this.response);

      var e = $('<div>' + r + '</div>');

      var initScript = e.find(".codeBlock").first();


      if (initScript.length > 0) {
        $(document.body).append(e);
        e.hide();
        eval(initScript.html().replace("<!--", "").replace("-->", ""));
        initScript.remove();
      }

    };
  }
  else {
    $(".logo").parent().remove();
    if (!window.isMobileDevice) {
      if (windowWidth > 600) windowWidth = 600;
      window.mainContainer.css("width", windowWidth + "px").css("left", "50%").css("margin-left", "-" + (windowWidth / 2) + "px");

    }
    window.prepareNewNavigationSystem();
  }
  window.mainContainer.append('<h3 class="viewerErrorMessage" style="display:none;position: absolute;left: 0;top: 50%;right: 0;color: black;margin-top: -30px;text-align: center;"></h3>');

};

window.prepareNewNavigationSystem = function () {
  var windowWidth = $(window).width();
  window.anipartiViewerOverride = window.anipartiViewerOverride || [];

  window.layoutContainer = $(".layout-container");
  if (!window.isMobileDevice) {
    if (windowWidth > 600) windowWidth = 600;


  }




  var navigationBar$ = window.funcStr(function () {/*<div class="navigationBar" style="position:absolute;left:0;bottom:0px;transform-origin: left bottom;opacity:0.7 ">
    <div class="pageProgressBarArea">
    <style>
    .icons {width:90px;height:90px; background-image:url(window_anipartiMainURLviewer-icons.png);}
   
    .pageProgressBarArea{position:absolute;left:0;bottom:0;width: 998px;height:70px;background-color:#939393ad}
    .pageProgressBarArea label{position: absolute;color: #444444;font-size: 40px;margin-top: -35px;text-align: right;right: 1%;top: 50%;}
    .pageProgressBarGrayArea,.pageProgressBarGreenArea{position:absolute;left:2%;width:calc(90% - 60px); top:15%;bottom:15%;border-radius:64px;background-color:silver;} 
    .pageProgressBarGreenArea{background-color:green;width:0px} </style>
    <label>0%</label><div class="pageProgressBarGrayArea"></div><div class="pageProgressBarGreenArea"></div></div>
    <div class="pageNavigationPanel">
    <style>.pageNavigationPanel{font-family:'Open Sans', sans-serif !important;position:absolute;bottom:0; width: 998px; height: 101px; left: 0; pointer-events: fill;background-color: #b0b0b0;}
    .pageNavigationPanel .pageDisplay{font-family:inherit; position: absolute;top:-45px; left:50%;margin-left:-75px;width:150px; font-size: 24px;text-align:center;background-color:#b0b0b0;padding:8px;padding-bottom:10px; }
    .pageNavigationPanel a{color:white;position:absolute;top:8px;}
    .pageNavigationPanel .logoImage {left: 50%;margin-left: -85px;background-position:-1080px 0px;width:180px}
 
    .pageNavigationPanel .nextButton{left:50%;margin-left:120px;background-position:0px 0px;}
    .pageNavigationPanel .nextButton.autoForward {background-position:-90px 0px;}
    .pageNavigationPanel .prevButton{left:50%;margin-left:-205px;background-position:-180px 0px;}
    .pageNavigationPanel .refreshButton{left:3%;background-position:-270px 0px;}
    .pageNavigationPanel .sidebarButton{right:3%;background-position:-360px 0px;}
    .layout-container.sidebar{transform:translateX(0%)}
    .layout-container.sidebar .layout-sidebar{transform:translateX(-100%);-webkit-box-shadow: -1px 2px 5px 0px rgba(0,0,0,0.47);box-shadow: -1px 2px 5px 0px rgba(0,0,0,0.47);}
    .layout-sidebar{bottom:50px;border-left-top:12px; transition:transform ease-in .2s;-webkit-transition:transform ease-in .2s;transform-origin:left top;
    -webkit-transform-origin:left top;border-top-left-radius: 10px;border-bottom-left-radius: 10px}
    .playModeBar a {top:2px;border-radius:12px; opacity:0.69; border:solid 0px silver; position:absolute;top:0;display:block;-webkit-filter1: drop-shadow(0px 4px 4px rgba(0,0,0,0.5));filter1: drop-shadow(0px 4px 4px rgba(0,0,0,0.5));}
    .playModeBar a.imageOnlyButton {background-position:-1260px 0px;right:20px;top:3px;}
    .playModeBar a.imageSoundButton {background-position:-1350px 0px;left:50%;top:3px;margin-left:-50px;}
    .playModeBar a.soundMotionButton {background-position:-1440px 0px;left:20px;top:3px;}
    .playModeBar a.selected {background-color:#aea8a8;}
    </style> <label class="pageDisplay">page 0/0</label> 
    <a class="refreshButton icons"></a> 
    <a class="logoImage icons"  onclick="$('.nextButton').toggleClass('autoForward')"></a>
    <a class="prevButton icons"></a> 
    <a class="nextButton autoForward icons"></a>
    
    <a class="sidebarButton icons" onclick="$('.layout-container').toggleClass('sidebar')"></a> 
    </div>
    
    </div>*/
  }).toString().replace('/*', '').replace('*/', '').replace(/window_anipartiMainURL/g, window.anipartiMainURL);

  window.navigationBar = $(navigationBar$);

  window.pageProgressBar = window.navigationBar.find(".pageProgressBarArea");
  window.pageProgressBar.label = window.pageProgressBar.find("label");

  window.pageProgressBar.pageProgressBarGreenArea = window.pageProgressBar.find(".pageProgressBarGreenArea");
  window.pageProgressBar.pageProgressBarGrayArea = window.pageProgressBar.find(".pageProgressBarGrayArea");

  window.pageNavigationDiv = window.navigationBar.find(".pageNavigationPanel");

  //$(document.body).append(fontAwsome$);



  var topNavBar$ = window.funcStr(function () {/*<div style="transform-origin: left top;position:absolute;left:0;right:0;top:0;width:998px;height:100px;">
  <div class="playModeBar" style="overflow:hidden; position:absolute;background-color:#4d4c4cad;left:50%;top:0;bottom:0;width:500px;margin-left:-250px;border-bottom-left-radius:12px;border-bottom-right-radius:12px;">
   <a class="imageOnlyButton icons" play-mode="imageOnly"></a>
   <a class="imageSoundButton icons" play-mode="imageSound"></a>
   <a class="soundMotionButton icons" play-mode="soundMotion"></a>
  </div>
   </div>*/}).toString().replace('/*', '').replace('*/', '');
  window.topNavBar = $(topNavBar$);

  if (window.viewerPlayMode == "soundMotion") {

  }

  window.topNavBar.find("a").click(function () {
    window.topNavBar.find("a.selected").removeClass("selected");
    window.viewerPlayMode = $(this).addClass("selected").attr("play-mode");
    console.log("window.viewerPlayMode", window.viewerPlayMode);
    setTimeout(function () {
      window.loadContent(window.contentStringOrig, true);

    }, 100);
    //window.contentStringOrig
  });


  window.layoutContainer.append(window.topNavBar);
  window.layoutContainer.append(window.navigationBar);
  window.layoutContainer.append($(".layout-sidebar-overlay,.layout-sidebar"))

  var sideBar$ = window.funcStr(function () {/*<div style="position:absolute;left:0;right:0;top:0;bottom:0;">
  <h3 class="sidebarLinks"><span class="icons" style="background-position:-900px 0px;"></span>Slides Groups</h3>
  <ul class="slideGroupsItems"></ul> 
   <hr class="ugcLinks"/>
  <h3 class="sidebarLinks ugcLinks backToListLink"><span class="icons" style="background-position:-450px 0px;"></span>Back to list</h3>
  <h3 class="sidebarLinks ugcLinks nextEpisodeLink"><span class="icons" style="background-position:-720px 0px;"></span>Next Episode</h3>
  <h3 class="sidebarLinks ugcLinks maniSearchLink"><span class="icons" style="background-position:-630px 0px;"></span>Mani Search</h3>
  <hr class="ugcLinks"/>

  <h3 class="sidebarLinks ugcLinks ugcPublishingLink"><span class="icons" style="background-position:-990px 0px;"></span>UGC Publishing</h3>
  <h3 class="sidebarLinks ugcLinks shareLink"><span class="icons" style="background-position:-810px 0px;"></span>Share</h3>
  <h3 class="sidebarLinks ugcLinks commentLink"><span class="icons" style="background-position:-540px 0px;"></span>Comment</h3>
  
  <style>
  .ugcLinks{display:none;}
  .layout-sidebar hr {margin-left:8px;margin-right:8px;border:solid 1px white;}
  .sidebarLinks  {margin-bottom: 16px !important;margin-top: 16px !important; position:relative;font-size:110%; font-family: sans-serif;padding-left:55px;text-transform: initial;text-shadow: 0px 2px 2px rgba(140, 140, 140, 1);}
  .sidebarLinks span {position:absolute;left:10px;top:-8px; transform:scale(0.4); display:block;width:90px;height:90px;transform-origin:left top;float:left;-webkit-filter: drop-shadow(0px 4px 4px rgba(110,110,110,0.6));filter: drop-shadow(0px 4px 4px rgba(110,110,110,0.6));}
  .slideGroupsItems {border-radius:10px;background-color:white;padding:0;overflow:hidden;overflow-y:auto;margin:10px;height:auto;max-height:40%;}
  .slideGroupsItems li{display:block;list-style:none;list-style-image:none;}
  .slideGroupsItems li a,.slideGroupsItems li a:hover,.slideGroupsItems li a:active{color: gray;padding-left: 20px;padding: 10px;display: block;font-family: sans-serif;font-size: 90%;text-decoration: none;}
  .slideGroupsItems li a:hover,.slideGroupsItems li a:active,.slideGroupsItems li.active a{background-color:#eaeaea;}

  </style>
  </div>*/}).toString().replace('/*', '').replace('*/', '');





  var navScale = windowWidth / 1000;
  window.navigationBar.css("transform", "scale(" + navScale + ")");
  window.navigationBar.css("top", "calc(100% - " + (100 * navScale) + 'px');


  window.topNavBar.css("transform", "scale(" + navScale + ")");

  $('.layout-sidebar').html(sideBar$).css("bottom", (100 * navScale) + "px");





  window.pageNavigationDiv.hide();
  window.pageProgressBar.hide();

  $("#viewerArea").css("top", "0px").css("height", "calc(100% - 0px)");

  window.anipartiViewerOverride.push(function (viewer) {



    viewer.actions["MoveToNextSlide"] = function (slide, action) {
      slide.readyToMoveNextSlide = true;
      console.log("MoveToNextSlide");
    };

    viewer.actions["ShowSlideNavigation"] = function (slide, action) {
      //slide.readyToMoveNextSlide = true;
      slide.pageNavigation = true;
    };
    window.showProgressBar = true;
    viewer.events("SlideLoaded", function (MainSlide) {
      if (MainSlide.uuid == "MainSlide") {
        window.pageProgressBar.show();
        window.pageNavigationDiv.hide();
        viewer.nextPageButton = window.pageNavigationDiv.find(".nextButton");
        viewer.prevPageButton = window.pageNavigationDiv.find(".prevButton");
        viewer.pageNavigationDiv.pageDisplay = window.pageNavigationDiv.find(".pageDisplay");
        //console.log("viewer.content.slides", viewer.content.slides);


        window.pageNavigationDiv.find(".refreshButton")[0].onclick = function (e) {
          viewer.activeSlide.reset();
          viewer.nextPageButton.hide();
        };

        viewer.slideNavigationDisplay = function (slide, total, processed) {
          var per = (((processed) / (total)));
          window.pageProgressBar.label.html(parseInt(per * 100) + "%");
          window.pageProgressBar.pageProgressBarGreenArea[0].style.width = ((window.pageProgressBar.pageProgressBarGrayArea.width()) * per) + "px";
          if (window.showProgressBar && processed < total) {
            window.pageProgressBar.show();
          }
          else window.pageProgressBar.hide();
        };

        viewer.events("RenderEventTime", function () {

          if ((viewer.usedSlides[viewer.currentViewSlide] && viewer.usedSlides[viewer.currentViewSlide].pageNavigation) && viewer.currentViewSlide + 1 < viewer.usedSlides.length && viewer.usedSlides[viewer.currentViewSlide + 1].loaded) {
            window.pageNavigationDiv.show();
            window.showProgressBar = false;
            if (viewer.usedSlides[viewer.currentViewSlide].readyToMoveNextSlide) {
              if (viewer.usedSlides[viewer.currentViewSlide + 1].alreadyMovedTo) return;

              if (viewer.nextPageButton.hasClass("autoForward")) {
                viewer.usedSlides[viewer.currentViewSlide + 1].alreadyMovedTo = false;
                viewer.usedSlides[viewer.currentViewSlide].readyToMoveNextSlide = false;
                setTimeout(function (viewer) { viewer.moveToSlide(1, true); }, 200, viewer);
              }
            }
          }
          else {

            if (viewer.currentViewSlide + 1 < viewer.usedSlides.length) window.showProgressBar = true;
            window.pageNavigationDiv.hide();
            if (viewer.currentViewSlide + 1 == viewer.usedSlides.length) {
              window.pageNavigationDiv.show();
            }
          }
        });

        viewer.moveToSlide = function (step, autoForward) {

          var index = viewer.currentViewSlide + step;
          console.log("viewer.index", index);


          if (step < 0) {
            if (index > 0) viewer.nextPageButton.removeClass("autoForward");
          }
          else {
            if (index > 1) {
              //  if (viewer.nextPageButton.hasClass("autoForward") && !autoForward) return (false);
            }//            
          }
          if (!viewer.playmodeReady) return (false);

          if (index < 1) return;
          if (index > viewer.usedSlides.length - 1) return;


          if (!viewer.usedSlides[index].pixiSlide || !viewer.usedSlides[index].loaded) return;

          viewer.currentViewSlide = index;

          viewer.pageNavigationDiv.pageDisplay.html("Page " + (index + viewer.slideStart) + "/" + viewer.actualSlidesCount);

          console.log("viewer.currentViewSlide=" + viewer.currentViewSlide);
          // viewer.activeSlide = false;
          viewer.usedSlides.forEach(function (slide, ind) {
            if (ind > 0) {
              if (ind == viewer.currentViewSlide) {
                viewer.activeSlide = slide;
                console.log(slide);
                if (slide.resetOnActivate) {
                  if (slide.clockTime > (slide.resetAfterSeconds * 1000)) {
                    slide.reset();
                  }
                  else slide.resume();
                }
                else slide.resume();
              } else {
                slide.pause();
              }
            }
          });

          if (viewer.activeSlide) {
            var tweenEffect = "easingBackOut";

            if (autoForward) tweenEffect = "linear";

            var posY = viewer.activeSlide.scrollY;
            var tw = {
              ObjectName: "MainCamera",
              Speed: 50, Delay: 0, Repeat: 1, EffectTime: 500,
              "PosX": 0, "PosY": posY, "Rotation": 0,
              "ScaleX": 1, "ScaleY": 1, Relative: false,
              TweenProperties: {
                "PosX": [false, tweenEffect],
                "PosY": [true, tweenEffect], "ScaleX": [false, "linear"], "ScaleY": [false, "linear"], "Rotation": [false, "linear"]
              }
            };
            viewer.actions.TweenEffect(viewer.MainSlide, tw);
            if (viewer.currentViewSlide + 2 > viewer.totalBatchSlidesLoaded) {
              viewer.batchLoadSlides(2);
            }
          }

        }
      }

    });


    viewer.improvedResourceLoader = window.improvedResourceLoader;

    viewer.loadSlideResources = function (slide, done) {

      viewer.improvedResourceLoader(slide, done); return;
      viewer.resourceLoader.push(viewer, slide.preloading,
        function () { done(slide); viewer.slideNavigationDisplay(slide, 100, 100); },
        function (total, processed) { viewer.slideNavigationDisplay(slide, total, processed); }
      );
    };

  });


  setTimeout(function () { if (window.loaderReady) window.loaderReady(); }, 200);

};

window.improvedResourceLoader = function (o, e) { var n = this; if (n.loadSlideResourcesDone = e, o.preloading.length < 1) e(o); else { var t = [], i = []; o.preloading.forEach(function (o) { o.soundBuffer ? t.push(o) : o.imageUrl && (n.textures[o.imageUrl] || i.push(o)) }), n.waitingImages = {}, n.loadingImagesCount = i.length, n.loadingSoundsCount = t.length, n.PIXI = n.getPIXI(), console.log("Loading Begin: " + o.title), n.totalProgress = n.loadingImagesCount + n.loadingSoundsCount, 0 == n.totalProgress && setTimeout(function () { n.loadSlideResourcesDone(o) }, 400), n.slideNavigationDisplay = n.slideNavigationDisplay || function () { }; var s = function () { n.slideNavigationDisplay(o, n.totalProgress, n.totalProgress - (n.loadingImagesCount + n.loadingSoundsCount)) }, a = function (e) { s(), n.loadingImagesCount <= 0 && n.loadingSoundsCount <= 0 && (console.log("Loading Done: " + o.title, e), setTimeout(function () { n.loadSlideResourcesDone(o) }, 400)) }; eachItem(t, function (o, e) { if (o.soundBuffer) { if ("" == o.soundBuffer) return n.loadingSoundsCount--, void e.callNext(); n.soundManager.loadBuffer(o.soundBuffer, function (t) { n.loadingSoundsCount--, console.log("sound loaded---" + o.soundBuffer), a("sounds completed"), e.callNext() }, function () { console.log("sound failed--11---" + o.soundBuffer), n.loadingSoundsCount--, a("sounds completed"), e.callNext() }, n.resourceUrl) } }, function () { }); var l = new Array; i.forEach(function (o) { var e = n.resourceUrl + o.imageUrl; n.textureDisplayScale > 1 && (e = n.resourceUrl + o.imageUrl + "_res_2"); var t = o.imageUrl; if (!n.textures[t] && "" != e) { var i = '<img src="' + e + '" texture="' + t + '" />'; l.push(i), n.waitingImages[e] = 1 } }), n.loadingImagesCount = l.length, console.log("viewer.loadingImagesCount", n.loadingImagesCount), n.imagesLoader.html(l.join("")), n.imagesLoader.find("img").each(function () { this.textureKey = this.getAttribute("texture"), this.onerror = function () { n.loadingImagesCount < 1 || (console.log("failed:" + this.src), delete n.waitingImages[this.src], n.loadingImagesCount--, a("images completed error")) }, this.onload = function () { n.loadingImagesCount < 1 || (n.loadingImagesCount--, console.log(this.src), delete n.waitingImages[this.src], n.textures[this.textureKey] = n.PIXI.Texture.fromImage(this.src), console.log(n.loadingImagesCount + " " + this.width + "x" + this.height), a("images completed 1")) } }) } };

function begin() {
  var loadingCSS = '.loading,.loading-text{margin-left:-50px;position:absolute}@-moz-keyframes rotate-loading{0%{transform:rotate(0);-ms-transform:rotate(0);-webkit-transform:rotate(0);-o-transform:rotate(0);-moz-transform:rotate(0)}100%{transform:rotate(360deg);-ms-transform:rotate(360deg);-webkit-transform:rotate(360deg);-o-transform:rotate(360deg);-moz-transform:rotate(360deg)}}@-o-keyframes rotate-loading{0%{transform:rotate(0);-ms-transform:rotate(0);-webkit-transform:rotate(0);-o-transform:rotate(0);-moz-transform:rotate(0)}100%{transform:rotate(360deg);-ms-transform:rotate(360deg);-webkit-transform:rotate(360deg);-o-transform:rotate(360deg);-moz-transform:rotate(360deg)}}@-webkit-keyframes rotate-loading{0%{transform:rotate(0);-ms-transform:rotate(0);-webkit-transform:rotate(0);-o-transform:rotate(0);-moz-transform:rotate(0)}100%{transform:rotate(360deg);-ms-transform:rotate(360deg);-webkit-transform:rotate(360deg);-o-transform:rotate(360deg);-moz-transform:rotate(360deg)}}@keyframes rotate-loading{0%{transform:rotate(0);-ms-transform:rotate(0);-webkit-transform:rotate(0);-o-transform:rotate(0);-moz-transform:rotate(0)}100%{transform:rotate(360deg);-ms-transform:rotate(360deg);-webkit-transform:rotate(360deg);-o-transform:rotate(360deg);-moz-transform:rotate(360deg)}}@-moz-keyframes loading-text-opacity{0%,100%,20%{opacity:0}50%{opacity:1}}@-o-keyframes loading-text-opacity{0%,100%,20%{opacity:0}50%{opacity:1}}@-webkit-keyframes loading-text-opacity{0%,100%,20%{opacity:0}50%{opacity:1}}@keyframes loading-text-opacity{0%,100%,20%{opacity:0}50%{opacity:1}}.loading{height:100px;left:50%;top:50%;margin-top:-50px;width:100px;border-radius:100%!important;border:2px solid #fff;border-color:transparent #fff;-moz-animation:rotate-loading 1.5s linear 0s infinite normal;-moz-transform-origin:50% 50%;-o-animation:rotate-loading 1.5s linear 0s infinite normal;-o-transform-origin:50% 50%;-webkit-animation:rotate-loading 1.5s linear 0s infinite normal;-webkit-transform-origin:50% 50%;animation:rotate-loading 1.5s linear 0s infinite normal;transform-origin:50% 50%}.loading-container{position:absolute;width:100%;height:100%;top:0;left:0;background:rgba(0,0,0,.4);z-index:99999}.loading-container:hover .loading{border-color:transparent #E45635}.loading-container .loading,.loading-container:hover .loading{-webkit-transition:all .5s ease-in-out;-moz-transition:all .5s ease-in-out;-ms-transition:all .5s ease-in-out;-o-transition:all .5s ease-in-out;transition:all .5s ease-in-out}.loading-text{left:50%;top:50%;margin-top:-5px;-moz-animation:loading-text-opacity 2s linear 0s infinite normal;-o-animation:loading-text-opacity 2s linear 0s infinite normal;-webkit-animation:loading-text-opacity 2s linear 0s infinite normal;animation:loading-text-opacity 2s linear 0s infinite normal;color:#fff;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:10px;font-weight:700;opacity:0;text-align:center;text-transform:uppercase;width:100px}';
  window.loadStyleSheet(document, loadingCSS);
  $(document.body).showProcessing();
  loadUrl( "isolated-engine-min.js?00kss11911311", "arraybuffer").onload = function () {
    JSZip.loadAsync(this.response).then(function (zip) {
      zip.file("isolated-loader.html").async("string").then(function (data) {
        console.log("loading 1");
        $(document.body).hideProcessing();
        console.log("loading page");
        try {
          window.loadPage(data);
        } catch (pe) {
          console.error(pe.message);
        }

        console.log("load page done");
        zip.file("isolated-engine.js").async("string").then(function (data) {
          window.engineSource = data;
          console.log("done engine 1");
          zip.file("aniparti-viewer.min.js").async("string").then(function (data) {
            window.viewerSource = data;
            console.log("done viewer 1");
            window.loadContent();
          });

        });
      });


    });
  };

};
if (window.isolateLoaderBegin)
  window.isolateLoaderBegin();
else {
  begin();

}
